# Generated by Django 4.0.1 on 2022-09-09 09:49
import json
import logging
from pathlib import Path

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

def get_console_logger():
    logger = logging.getLogger(__name__)
    handler = logging.StreamHandler()
    logger.addHandler(handler)
    logger.setLevel(logging.INFO)

    logger.info("starting logger")
    return logger

def updateWrongRefiningName(name):
    if name == "Flux" or name == "Sand Flux" or name == "Shelldust Flux":
        return "Obsidian Flux"
    elif name == "Tannin" or name == "Rested Tannin":
        return "Aged Tannin"
    elif name == "Sandpaper" or name == "Coarse Sandpaper" or name == "Fine Sandpaper":
        return "Obsidian Sandpaper"
    elif name == "Crossweave" or name == "Silkweave":
        return "Wireweave"
    elif name == "Solvent" or name == "Weak Solvent" or name == "Potent Solvent":
        return "Pure Solvent"
    return name

def migrate_crafting_recipes(apps, schema_editor):
    logger = get_console_logger()
    ConfirmedNames = apps.get_model("nwmarketapp", "ConfirmedNames")  # noqa
    Craft = apps.get_model("nwmarketapp", "Craft")  # noqa

    nwdb_data_file = Path(settings.BASE_DIR) / "nwmarketapp" / "data" / "crafting_recipes.json"
    with nwdb_data_file.open("r") as f:
        nwdb_data = {
            item["name"]: item
            for item in json.load(f)
        }

    cn_matches = ConfirmedNames.objects.filter(name__in=[values["name"] for values in nwdb_data.values()]) # get items that match with a recipe
    for match in cn_matches:
        if "ingredients" in nwdb_data[match.name]:
            for components in nwdb_data[match.name]["ingredients"]:
                components["name"] = updateWrongRefiningName(components["name"])
                component_name = None
                already_in = None
                try:
                    component_name = ConfirmedNames.objects.get(name=components["name"])
                except ConfirmedNames.DoesNotExist:
                    logging.warning("no CN for " + components["name"] + " aborting whole craft")
                if component_name == None:
                    break
                try:
                    already_in = Craft.objects.get(component_id=component_name.id) # get items that already have a recipe in db
                except Craft.DoesNotExist:
                    # logging.warning("craft is not set, adding it")
                    Craft(item_id=match.id, component_id=component_name.id, quantity=components["quantity"]).save()
                if already_in != None:
                    # logging.warning("craft already exist, updating it")
                    already_in.item_id = match.id
                    already_in.component_id = component_name.id
                    already_in.quantity = components["quantity"]
                    already_in.save()
        else:
            continue


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('nwmarketapp', '0012_craft'),
    ]

    operations = [
        migrations.RunPython(migrate_crafting_recipes, backwards),
    ]
