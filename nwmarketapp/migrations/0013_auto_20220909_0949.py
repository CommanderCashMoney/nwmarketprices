# Generated by Django 4.0.1 on 2022-09-09 09:49
import json
import logging
from pathlib import Path

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

def get_console_logger():
    logger = logging.getLogger(__name__)
    handler = logging.StreamHandler()
    logger.addHandler(handler)
    logger.setLevel(logging.INFO)

    logger.info("starting logger")
    return logger


def migrate_crafting_recipes(apps, schema_editor):
    logger = get_console_logger()
    ConfirmedNames = apps.get_model("nwmarketapp", "ConfirmedNames")  # noqa
    Craft = apps.get_model("nwmarketapp", "Craft")  # noqa

    nwdb_data_file = Path(settings.BASE_DIR) / "nwmarketapp" / "data" / "crafting_recipes.json"
    with nwdb_data_file.open("r") as f:
        nwdb_data = {
            item["name"]: item
            for item in json.load(f)
        }

    cn_matches = ConfirmedNames.objects.filter(name__in=[values["name"] for values in nwdb_data.values()])
    already_in = Craft.objects.filter(item__in=[values["id"] for values in cn_matches.values()])
    logger.warning(nwdb_data);
    for match in cn_matches:
        correct_nwdb_id = None
        for values in nwdb_data.values():
            if values["name"] == match.name and values["nwdb_id"] != match.nwdb_id:
                correct_nwdb_id = values["nwdb_id"]
                break
        if correct_nwdb_id is None:
            continue
        match.nwdb_id = correct_nwdb_id
        match.save()

    cn_matches = ConfirmedNames.objects.filter(nwdb_id__in=[nwdb_id for nwdb_id in nwdb_data])
    to_remove = set()
    for match in cn_matches:
        try:
            real_name = nwdb_data[match.nwdb_id]["name"]
            item_classes = nwdb_data[match.nwdb_id]["itemClass"].replace("{", "").replace("}", "").split(",")
            item_type = nwdb_data[match.nwdb_id]["itemType"]
        except KeyError:
            raise
        match.item_type = item_type
        match.item_classes = item_classes
        if match.name != real_name:
            match.name = real_name
        match.save()
        to_remove.add(match.nwdb_id)

    for nwdb_id, data in nwdb_data.items():
        if nwdb_id in to_remove:
            continue
        ConfirmedNames(
            name=data["name"],
            nwdb_id=nwdb_id,
            username="nwdb",
            item_type=data["itemType"],
            item_classes=data["itemClass"].replace("{", "").replace("}", "").split(",")
        ).save()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('nwmarketapp', '0012_craft'),
    ]

    operations = [
        migrations.RunPython(migrate_crafting_recipes, backwards),
    ]
