# Generated by Django 4.0.1 on 2022-03-31 21:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def forwards(apps, schema_editor):
    NameCleanupV2 = apps.get_model("nwmarketapp", "NameMap")  # noqa
    NameCleanupV1 = apps.get_model("nwmarketapp", "NameCleanup")  # noqa
    ConfirmedNames = apps.get_model("nwmarketapp", "ConfirmedNames")  # noqa

    all_confirmed_names_qs = ConfirmedNames.objects.all().values("name", "id")
    all_confirmed_names = {
        obj["name"]: obj["id"]
        for obj in all_confirmed_names_qs
    }
    for obj in NameCleanupV1.objects.exclude(bad_word__isnull=True):
        if obj.good_word in all_confirmed_names:
            NameCleanupV2(
                bad_name=obj.bad_word,
                correct_item_id=all_confirmed_names[obj.good_word],
                number_times_seen=1
            ).save()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('nwmarketapp', '0007_run_tz_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='NameMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bad_name', models.TextField(editable=False)),
                ('number_times_seen', models.IntegerField(editable=False)),
                ('correct_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nwmarketapp.confirmednames')),
                ('user_corrected', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_corrected', to=settings.AUTH_USER_MODEL)),
                ('user_submitted', models.ForeignKey(default=3, on_delete=django.db.models.deletion.PROTECT, related_name='user_submitted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Name Mapping',
                'verbose_name_plural': 'Name Mappings',
                'db_table': 'name_map',
            },
        ),
        migrations.RunPython(forwards, backwards),
    ]
